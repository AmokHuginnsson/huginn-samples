#! /bin/sh
exec huginn --no-argv -E "${0}"
#! huginn

/*
 * Based on:
 * Author: Todd Larason <jtl@molehill.org>
 * $XFree86: xc/programs/xterm/vttests/256colors2.pl,v 1.2 2002/03/26 01:46:43 dickey Exp $
 *
 * use the resources for colors 0-15 - usually more-or-less a
 * reproduction of the standard ANSI colors, but possibly more
 * pleasing shades
 */

import Algorithms as algo;

main() {
	// colors 16-231 are a 6x6x6 color cube
	for ( red, green, blue : algo.product( algo.range( 6 ), algo.range( 6 ), algo.range( 6 ) ) ) {
		print(
			"\x1b]4;{};rgb:{:02x}/{:02x}/{:02x}\x1b\\".format(
				16 + ( red * 36 ) + ( green * 6 ) + blue,
				( red > 0 ? ( red * 40 + 55) : 0 ),
				( green > 0 ? ( green * 40 + 55 ) : 0 ),
				( blue > 0 ? ( blue * 40 + 55 ) : 0 )
			)
		);
	}

	// colors 232-255 are a grayscale ramp, intentionally leaving out
	// black and white
	for ( gray : algo.range( 24 ) ) {
		level = ( gray * 10 ) + 8;
		print(
			"\x1b]4;{};rgb:{:02x}/{:02x}/{:02x}\x1b\\".format(
			 232 + gray, level, level, level
			)
		);
	}


	// display the colors

	// first the system ones:
	print( "System colors:\n" );
	for ( color : algo.range( 8 ) ) {
		print( "\x1b[48;5;{}m  ".format( color ) );
	}
	print( "\x1b[0m\n" );
	for ( color : algo.range( 8, 16 ) ) {
		print( "\x1b[48;5;{}m  ".format( color ) );
	}
	print( "\x1b[0m\n\n" );

	// now the color cube
	print( "Color cube, 6x6x6:\n" );
	for ( green : algo.range( 6 ) ) {
		for ( red : algo.range( 6 ) ) {
			for ( blue : algo.range( 6 ) ) {
				color = 16 + ( red * 36 ) + ( green * 6 ) + blue;
				print( "\x1b[48;5;{}m  ".format( color ) );
			}
			print( "\x1b[0m " );
		}
		print( "\n" );
	}


	// now the grayscale ramp
	print( "Grayscale ramp:\n" );
	for ( color : algo.range( 232, 256 ) ) {
		print( "\x1b[48;5;{}m  ".format( color ) );
	}
	print( "\x1b[0m\n" );
	return ( 0 );
}

